&lt;project-name&gt;/&lt;project-name&gt;-ejb/nbproject/project.properties
"(Public service announcement: NEVER call Optional.get unless you can prove it will never be null; instead use one of the safe methods like orElse or ifPresent.  In retrospect, we should have called get something like getOrElseThrowNoSuchElementException or something that made it far clearer that this was a highly dangerous method that undermined the whole purpose of Optional in the first place.  Lesson learned.  (UPDATE: Java 10 has Optional.orElseThrow(), which is semantically equivalent to get(), but whose name is more appropriate.))"
"@Query(""SELECT SUM(m.totalDays) FROM MyEntity m""Z)"
"@see JavaDoc: ReflectionTestUtils.setField(java.lang.Object, java.lang.String, java.lang.Object)"
[-HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.jar]
"1) For Windows, download ""tools_r25.2.3-windows.zip"" and unzip it."
"1. Implement ActionListener in your class, then use jBtnSelection.addActionListener(this);  Later, you'll have to define a menthod, public void actionPerformed(ActionEvent e).  However, doing this for multiple buttons can be confusing, because the actionPerformed method will have to check the source of each event (e.getSource()) to see which button it came from."
123 is a substring of a123b so the find() method outputs true. matches() only 'sees' a123b which is not the same as 123 and thus outputs false.
"2) For MacOSX, download ""tools_r25.2.3-macosx.zip"" and unzip it."
"2)Now if you work in Eclipse IDE or similar you will need to make a folder in your project (lets say ""lib"") and inside that create another folder( name it ""jars"" ).In jars folder place the following jars: jna-3.5.1.jar, platform-3.5.1.jar,vlcj-2.2.0.jar.You can find these jars from vlcj google project.And then just include them to your classpath(either select them and right-click-&gt;add to build path or go to project properties-&gt;Java build path and add those 3 jars).Thats all for setup before we begin any coding with player setup."
"A DispatcherServlet is just a typical Java EE Servlet. You register it with your typical &lt;web.xml&gt; &lt;servlet-class&gt; and &lt;servlet-mapping&gt; declaration, or directly through ServletContext#addServlet in a WebApplicationInitializer, or with whatever mechanism Spring boot uses. As such, you must rely on the url mapping logic specified in the Servlet specification, see Chapter 12. See also"
A JTextComponent's getText() and A JTextPane/JEditorPane's getText() has different implementation. JTextPane/JEditorPane uses EditorKit to write the document content(text) to a StringWriter and then return the text with  formatting and inserting a line/paragraph break into the document. But the JTextCompoent returns document content directly by:
A little late to the game here but this is most likely a problem with the dependencies you have listed in your build.gradle file for you app. 
A method like persist() is required.
A ScatterRenderer inherits getItemShape() from AbstractRenderer. You can override getItemShape() to supply your own shapes.
"a sequence of variables, with or without types (or since Java 11, with var), in parentheses.(x), (x, y), (int x, int y), (var x, var y) (Java 11+).(int x, y), (x, var y), (var x, int y)"
"A StackTraceElement has getClassName(), getFileName(), getLineNumber() and getMethodName()."
"A) @ManyToOne(fetch=FetchType.LAZY) should work just fine. Are you sure it's not being overwritten in the query itself? It's possible to specify join fetch in HQL and / or explicitly set fetch mode via Criteria API which would take precedence over class annotation. If that's not the case and you're still having problems, please post your classes, query and resulting SQL for more to-the-point conversation."
AbstractAuditableEntity.java
"ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION, and WRITE_EXTERNAL_STORAGE are all part of the Android 6.0 runtime permission system. In addition to having them in the manifest as you do, you also have to request them from the user at runtime (using requestPermissions()) and see if you have them (using checkSelfPermission())."
"Addendum: Alternatively, you can scale the image first (using either approach above) and then use your RescaleOp in drawImage()."
"Addendum: To color individual items, the API recommends the approach shown here, in which a custom renderer overrides getItemPaint(). Color.getHSBColor() is used to create a full spectrum of colors."
"Addendum: Your application lags for 10 seconds on startup. As this is the exact time for which the Controller sleeps, it's surely sleeping on the EDT. An sscce would be dispositive. Instead, do the work on another thread and update the model on the EDT. SwingWorker has a process() method that does so automatically, or you can use invokeLater() as shown below. Until your application is correctly synchronized, there's little hope of getting Apple events to work."
"Additionally, if CustomObjectimplements Comparable, then just use Collections.sort(list)"
"After further research, reloading properties must be carefully considered. In Spring, for example, we can reload the 'current' values of properties without much problem. But. Special care must be taken when resources were initialized at the context initialization time based on the values that were present in the application.properties file (e.g. Datasources, connection pools, queues, etc.). "
"Also I can confirm that it isn't a thread problem within the Log4J logic, because the only time it creates/uses its own thread is when one of AsynchAppender/ExternallyRolledFileAppender/SocketAppender/TelnetAppender is used OR when PropertyConfigurator.configureAndWatch or DOMConfigurator.configureAndWatch method is called."
"Also there is no explicit ""mouse pressed"" notion in MouseEvent, so you must track that yourself.  I have provided an example of how to do this.  Also note the MouseEvent.BUTTON1 references, as this is just to track the state of the left mouse button."
"Also, getScaledInstance() is generally a bad idea. This explains why and gives better options for resizing the image. If you're using the image elsewhere, then it's worth reading up on that article and scaling it using a better technique (such as graphics.drawImage()). But if you're just using it in the menu, then resizing the source image is probably the best thing to do."
"Also, if the right-hand side of the for (:) idiom is an array rather than an Iterable object, the internal code uses an int index counter and checks against array.length instead. See the Java Language Specification."
"Alternatively, you could accept a String and return a String. Just construct the JSONObject with the string parameter, and call JSONObject.toString() when returning."
"Although it may be commonly true that many classes have equals() defined so that its objects can only be equal to objects of its own class, that is certainly not always the case. For example, the specification for List.equals() says that two List objects are equal if they are both Lists and have the same contents, even if they are different implementations of List. So coming back to the example in this question, it is possible to have a Collection&lt;ArrayList&gt; and for me to call contains() with a LinkedList as argument, and it might return true if there is a list with the same contents. This would not be possible if contains() were generic and restricted its argument type to E."
"An instance of java.awt.TexturePaint provides a convenient way to tile a BufferedImage. Related examples may be seen here. Given a TexturePaint, you can fill a component's background fairly easily, as shown here."
"And no matter if you use Class.forName() or the new service provider mechanism, you will always need the JDBC driver on the classpath (or available via some ClassLoader at runtime, at least)."
"Array.asList() wraps an array in the list interface. The list is still backed by the array. Arrays are a fixed size - they don't support adding or removing elements, so the wrapper can't either."
"As described here, a CountDownLatch works well in this context. In the example below, each worker invokes latch.countDown() on completion, and a Supervisor worker blocks on latch.await() until all tasks complete. For demonstration purposes, the Supervisor updates the labels. Wholesale removal, shown in comments, is technically possible but generally unappealing. Instead, consider a JList or JTable."
"As far as your original example of List&lt;String&gt; list = new LinkedList(), the compiler generates a warning for that assignment because it must. Consider this:"
"As for the problem with failed tests, you can  set maven.test.error.ignore so that the build continues on failed tests.  This is not recommended as a continuing practice, but it should get you functioning until all of your tests pass. For more detail, see the maven surefire documentation."
"As I mentioned above, we had been talking to the Guava developers. One of the cool things they have is an Idea Graveyard where they describe features that they decided not to implement along with the reasons. The idea of lazy collections sounds pretty cool, but here's what they have to say about it. Consider a List.filter() operation that returns a List:"
"as of java 6, you can use java.text.normalizer:"
"As solution: try to check if getIntent().getExtras() != null before getting the data, this will fix your problem."
"As suggested here, a custom renderer can query the model to condition the result returned by getItemPaint(). In this example, subtasks are rendered using a palette of varying saturations of the default color for a given series. The approach assumes that the renderer makes two passes; some care should be given to documenting the dependency."
Avoid the Date object creation w/ System.currentTimeMillis().  A divide by 1000 gets you to Unix epoch.
Basically the properties inside the application.properties serve as a default you can always override them by using another application.properties next to the artifact you deliver or by adding JVM parameters (-Dserver.port=6666).
"Basically, DateFormat sets Calendar.setLenient and the Javadoc states:"
"Basically, I think you have a good understanding of how this works, so let me just reiterate in layman's terms. getOutputStream basically opens a connection stream, with the intention of writing data to the server. In the above code example ""message"" could be a comment that we're sending to the server that represents a comment left on a post. When you see getOutputStream, you're opening the connection stream for writing, but you don't actually write any data until you call writer.write(""message="" + message);."
"Basically, java.exe is a super simple C application that parses the command line, creates a new String array in the JVM to hold those arguments, parses out the class name that you specified as containing main(), uses JNI calls to find the main() method itself, then invokes the main() method, passing in the newly created string array as a parameter.  This is very, very much like what you do when you use reflection from Java - it just uses confusingly named native function calls instead."
"Before Servlet 3.0 (Dec 2009), the Servlet API didn't natively support multipart/form-data. It supports only the default form enctype of application/x-www-form-urlencoded. The request.getParameter() and consorts would all return null when using multipart form data. This is where the well known Apache Commons FileUpload came into the picture."
"Before, I used the assertEquals() static method from the Assert class of the JUnit framework. This framework is a de-facto standard in writing Java tests and the assertEquals() method family is the standard way to verify the results of your program. They make sure the arguments passed into the method are equal and if they are not, they throw an AssertionError."
"But I think a work-around for your specific case would be to specify type as 'java.lang.Object', since this should work ok: for serialization, String will be output as is, and for deserialization, it will be deserialized as a Map. Actually you might want to have separate getter/setter if so; getter would return String for serialization (and needs @JsonRawValue); and setter would take either Map or Object. You could re-encode it to a String if that makes sense."
but i would choose 64-bit integer column types for simplicity and for direct compatibility with the java.time.instant class?
"By calling Thread.currentThread().interrupt(), you set the interrupt flag of the thread, so higher-level interrupt handlers will notice it and can handle it appropriately."
"C++ suffers from none of these problems. The compiler doesn't care about passing types down to any VM's - if both your objects have a .Name() function, it will compile. If they don't, it won't. Simple."
"Calling Socket.close() on the socket will close the associated InputStream and OutputStream objects, and cause any threads blocked in Socket or (associated) stream  operations to be unblocked.  According to the javadoc, operations on the socket itself will throw a SocketException."
Casting of an object does NOT change anything; it is just the way the compiler treats it.instanceof or Class.isInstance().
"Class loaders no longer used can be garbage collected (unless there is a memory leak, as is often the case with using ThreadLocal, JDBC drivers, java.beans, etc)."
"Class.getResource can take a ""relative"" resource name, which is treated relative to the class's package. Alternatively you can specify an ""absolute"" resource name by using a leading slash. Classloader resource paths are always deemed to be absolute."
classDirectories = files(classDirectories.files.collect { instead of classDirectories.setFrom
"ClassLoader.getResourceAsStream(path) will consider all paths to be absolute paths. So calling String.class.getClassLoader().getResourceAsStream(""myfile.txt"") and String.class.getClassLoader().getResourceAsStream(""/myfile.txt"") will both look for a file in your classpath at the following location: ./myfile.txt."
"Clearly, notify wakes (any) one thread in the wait set, notifyAll wakes all threads in the waiting set. The following discussion should clear up any doubts. notifyAll should be used most of the time. If you are not sure which to use, then use notifyAll.Please see explanation that follows."
Collections.synchronizedList is normally used at the time of creation of the list to avoid any accidental unsynchronized access to the list.
"Combining two filter instances creates more objects and hence more delegating code but this can change if you use method references rather than lambda expressions, e.g. replace filter(x -&gt; x.isCool()) by filter(ItemType::isCool). That way you have eliminated the synthetic delegating method created for your lambda expression. So combining two filters using two method references might create the same or lesser delegation code than a single filter invocation using a lambda expression with &amp;&amp;."
"Consider StringimplementsCharSequence as an example. You should not just blindly use CharSequence in preferrence to String for all cases, because that would deny you simple operations like trim(), toUpperCase(), etc."
"Considering the String class' length method returns an int, the maximum length that would be returned by the method would be Integer.MAX_VALUE, which is 2^31 - 1 (or approximately 2 billion.)"
"Could not find class 'javax.mail.internet.InternetAddress', referenced from method com.my.project.Main.isValidEmailAddress"
"Create a ""settings.xml"" file:"
currentLocale can be obtained from Locale.getDefault() i.e.:
"date and time api, you can use java.time.yearmonth class"
"Depends on the SQL type of the field, really. PreparedStatement has setters for all three values, #setDate() being the one for sql.Date, #setTime() for sql.Time and #setTimestamp() for sql.Timestamp."
"Different JARs (hadoop-commons for LocalFileSystem, hadoop-hdfs for DistributedFileSystem) each contain a different file called org.apache.hadoop.fs.FileSystem in their META-INFO/services directory. This file lists the canonical classnames of the filesystem implementations they want to declare (This is called a Service Provider Interface implemented via java.util.ServiceLoader, see org.apache.hadoop.FileSystem#loadFileSystems)."
"Don't override paint components, use paintComponent and don't forget to call super.paintComponent"
Don't throw an exception unless you really have an exceptional condition. System.exit(int) is there for precisely this reason. Use it.
"don't understand why, since hasnext() is supposed to look at something, not change, but it worked"
"EDIT: Now that Java 8 has been released, if you can use that, do so! java.time is even cleaner than Joda Time, in my view. However, if you're stuck pre-Java-8, read on..."
edit: since Java 8 you can now use java.time package instead of joda-time
EDIT: with cancel(true); you have to (always) cautgh an exception java.util.concurrent.CancellationException
"EDITED: If you're inside a Servlet object, then call getServletContext(). If you're in JSP, use the predefined variable application."
Eg. on Android File.exists() is implemented using access() system call while File.isFile()/File.isDirectory() use stat(). In this case processing stat() output requires more logic in userspace than access().
"Ex: Toast.maketext(getActivity(), ""..."", Toast.LENGTH_LONG).show();"
"Exception in thread ""main"" java.lang.NoSuchMethodError: main"
"Finally, when you make a Matcher, the Matcher potentially makes more copies of this 600 MB CharBuffer, depending on how you use it.  Ouch.  That's a lot of memory used by a small number of objects!  Given a Matcher, every time you call toMatchResult(), you'll make a String copy of the entire CharBuffer.  Also, every time you call replaceAll(), at best you will make a String copy of the entire CharBuffer.  At worst you will make a StringBuffer that will slowly be expanded to the full size of the replaceAll result (applying a lot of memory pressure on the heap), and then make a String from that."
"first, get the table's default selection background color: second, override prepareeditor(), as shown in this example"
"First, it is only string literals (see notes) that get automatically interned / added to the string pool.  String objects that are created by an application at runtime are not interned ... unless your application explicitly calls String.intern()."
For a Collection (or Map):  use .size().
"For reference, the example below overrides the getColumnClass() of DefaultTableModel to obtain the default renderer for types Icon and Date. "
"For scroll down: swipeVertical((AppiumDriver)driver,0.1,0.9,0.5,3000)"
"For serialization of objects that do not implement the Serializable interface you either need to write your own serializer, for example using the read*/write* methods of java.io.DataOutputStream and the get*/put* methods of java.nio.ByteBuffer perhaps together with reflection, or pull in a third party dependency."
"For the given sample, you have a build.gradle file like this:"
"For those unfamiliar with streams, what this does is gets an IntStream from 0 to the length, then boxes it, making it a Stream&lt;Integer&gt; so that it can be transformed into an object, then collects them using Collectors.toMap which takes two suppliers, one of which generates the keys, the other the values."
Found a solution. I switched Java to use the G1 garbage collector and now the HeapFreeRatio parameters works as intended. So I use these options in eclipse.ini:
"Further, remember that if you print a string to an output, for example System.out, that will use the system default encoding that is system dependent to convert the String to bytes. It looks like your system default is UTF-8."
"Generally, Java 8 streams are not magic. They couldn't speedup already well-implemented things (with, probably, plain iterations or Java 5's for-each statements replaced with Iterable.forEach() and Collection.removeIf() calls). Streams are more about coding convenience and safety. Convenience -- speed tradeoff is working here."
Get the SSLSession from your SSLSocket on your client and use its getProtocol() method.
getBeansWithAnnotation()
getClass().getResource()getClass().getResourceAsStream() which is stream based.
"getResourceAsStream returns an InputStream, but obtains an URL under the hood. Alternatively, you could get an URL if that's what you need. getResource() will return an URL"
"Guided by ChartFactory.createXYLineChart(), simply specify a XYToolTipGenerator to the renderer. The default format, seen here, is Series: (x, y)."
handle(() -&gt; { return f(); }) and handle(() -&gt; x) will call the first one
Use Collections#shuffle():
hello-view.fxml
"Here's a complete example that may prove helpful. As the sample Map is unmodifiable, I refer you to @mKorbel's example on how to override isCellEditable() and setValueAt()."
Here's a kickoff example how the doPost() of your UploadServlet may look like when using Apache Commons FileUpload:
"However the TextView is referenced, it will be filled with the toString() of each object in the array. You can add lists or arrays of custom objects. Override the toString() method of your objects to determine what text will be displayed for the item in the list."
"However, if flush() throws a runtime exception for some reason, then out.close() will never be called."
"However, the usual answer in my experience is to have a static {} block at the end of all the static initializers, and do all static initialization there, using EnumSet.allOf  to get at all the values."
"However, with your example, I believe it will still fail, since the implementation of getValue() relies on quantity and price, rather than getQuantity() and getPrice(), which is what you've mocked."
"However, you seem to be after a List of Strings rather than an array, so the array must be turned into a list by using the Arrays.asList() utility. Just as an FYI you could also do something like so:"
"I didn't understand ""Instead, the fields should be private and you should use getters/setters/contructor parameters to get, set and set the fields."" I should write private float c_cfr() ?"
"I don't know of a JAXB tweak; the way I've done this kind of thing is to implement an XmlEventReader (or XmlStreamReader) that simulates end-of-document when needed.  Note that Unmarshaller.unmarshal() will take one of these as an argument.  To make sure you get the event sequence right, watch a ""normal"" document's event sequence.  You'll do two unmarshal()s."
"I know its ugly but it does not use any funny stuff just legacy OpenGL and Math.h (cos(),sin(),M_PI) and VCL for bitmap loading. So rewrite to your environment and you will be fine. Do not forget that each planet has its own texture so you need to have one txrid per planet so either have each planet as separate planet variable or rewrite ..."
"I rarely see anyone using the .hasNext() properly, by testing for the generic .hasNext() to control the event loop, and then using the if(.hasNextXxx()) idiom lets you decide how and what to proceed with your code without having to worry about asking for an int when none is available, thus no exception handling code."
"I see that as of Java 9, Object.finalize() is deprecated! They point us to java.lang.ref.Cleaner and java.lang.ref.PhantomReference as alternatives."
"I see this question is a bit old, but I decided to give an answer anyway for those who find this question by searching.homogeneous coordinates. [x,y,w] for 2D, and [x,y,z,w] for 3D. Since you have three axes in 3D as well as translation, that information fits perfectly in a 4x4 transformation matrix. I will use column-major matrix notation in this explanation. All matrices are 4x4 unless noted otherwise."
i suggest using  the java.text.dateformat as shown in this page :
"I will show you few examples, together with hashCode() of each String and hashCode() of internal char[] value field (I will call it text to distinguish it from string). Finally I'll show javap -c -verbose output, together with constant pool for my test class. Please do not confuse class constant pool with string literal pool. They are not quite the same. See also Understanding javap's output for the Constant Pool."
i would prefer to use suggested java.util.concurrent.timeunit class.
"If SWT is missing a feature that you need, the framework is somewhat hostile to extending it. For example, you can't extend any class in it (the classes aren't final, they just throw exceptions when the package of this.getClass() isn't org.eclipse.swt and you can't add new classes in that package because it's signed)."
"If the exception caught by the servletcontainer is a ServletException and the &lt;error-page&gt; is declared to catch an exception other than ServletException, then its cause will actually be unwrapped and stored as ""javax.servlet.error.exception"". "
"If you are working with a source other than a file, you can use the lines() method in BufferedReader instead."
"If you can use external libraries, take a look at Guava's MapMaker.makeComputingMap(). It's tailor-made for what you're trying to do."
"If you can, use something like Java 6's Console or Swing's JPasswordField to get a password. These return an array, so you can ""delete"" the password from memory when you are done with it: Arrays.fill(password, '\0');"
"If you can't modify the dependency (think of a third-party dependency, for instance), you can still index it by adding an entry to your application.properties:"
"If you don't use -Dsun.net.inetaddr.ttl=0 or call Security.setProperty, you will need to edit $JRE_HOME/lib/security/java.security and set those security properties in that file, e.g."
"If you happen to be at Java 8 already, then you can even use Stream API for this, starting with Files#lines()."
"If you happen to use JSF utility library OmniFaces, use Ajax#update()."
"if you have your input as string, rather than Date, you should use SimpleDateFormat to parse it: new SimpleDateFormat(""dd/M/yyyy"").parse(dateString)"
"if you need the output to be Tue rather than 3 (Days of week are indexed starting at 1 for Sunday, see Calendar.SUNDAY), instead of going through a calendar, just reformat the string:  new SimpleDateFormat(""EE"").format(date) (EE meaning ""day of week, short version"")"
"If you need to do anything more complicated than this, I would recommend looking at the Pattern and Matcher classes and learning how to do some regular expressions. Once you understand those, you can use those classes or the String.matches() helper method."
"If you replace .count() with Java 8-style implementation .mapToLong(e -&gt; 1L).sum(), it will be slow again even on JDK 9."
If you use ChromeDriver driver = new ChromeDriver(); the ChromeDriver instance which will get created through that we will be only able to invoke and act on the methods implemented by ChromeDriver and supported by Chrome Browser only. To act with other browsers we have to specifically create individual objects as below :
"If you want to see if the regex matches an input text, use a Pattern, a Matcher and the .find() method of the matcher:"
"If your ""BiMultimap"" is going to immutable constant - use Multimaps.invertFrom and ImmutableMultimap / ImmutableListMultimap / ImmutableSetMultimap (each of theese three has different collection storing values). Some code (example taken from app I develop, uses Enums and Sets.immutableEnumSet):"
"If your class has a no-arg constructor, you can get a Class object using Class.forName() and use the newInstance() method to create an instance (though beware that this method is often considered evil because it can defeat Java's checked exceptions)."
Implementation note: BigInteger constructors and operations throw ArithmeticException when the result is out of the supported range of -2Integer.MAX_VALUE (exclusive) to +2Integer.MAX_VALUE (exclusive).
in a nutshell then you don't have much choice: you need to pass through the os api ( runtime.exec )
"In case you're not on Java 8 yet, or are forced to use java.util.Date, then format the date using SimpleDateFormat using a format pattern matching the input string."
"In Java 8 (pointed out by @Matt), you can get a concurrent hash set view via ConcurrentHashMap.newKeySet(). This is a bit simpler than the old newSetFromMap which required you to pass in an empty map object. But it is specific to ConcurrentHashMap."
"In java.lang.String, the replace method either takes a pair of char's or a pair of CharSequence's (of which String is a subclass, so it'll happily take a pair of String's). The replace method will replace all occurrences of a char or CharSequence. On the other hand, the first  String arguments of replaceFirst and replaceAll are regular expressions (regex). Using the wrong function can lead to subtle bugs."
"In order for a View to be created, it must know where to create it and whether it has any children so that it can display. This means that every View has an reference to the Activity (via getContext()). Moreover, every View keeps references to its children (i.e. getChildAt()). Finally, each View keeps a reference to the rendered Bitmap that represents its display."
"In previous versions of Spring (before 4.0), QualifierAnnotationAutowireCandidateResolver was set during creation of most ApplicationContexts (compare AbstractRefreshableApplicationContext.customizeBeanFactory(DefaultListableBeanFactory) implementations). "
"In SQL side, there are several standard date and time types, DATE, TIME and TIMESTAMP (at some DB's also called DATETIME), which are represented in JDBC as java.sql.Date, java.sql.Time and java.sql.Timestamp, all subclasses of java.util.Date. The precision is DB dependent, often in milliseconds like Java, but it can also be in seconds."
In struts.xml:
in that case you have to also override hashcode()
"In the case that your JDBC driver doesn't support it, your best bet is using a statement wrapper which records all calls to setXxx() methods and finally populates a SQL string on toString() based on the recorded information. An existing library which does that is P6Spy. In the meanwhile, post an enhancement request to the development team of your JDBC driver and hope that they'll implement the desired toString() behavior as well."
"In the example below, the static nested class CanvasPane wraps an instance of Canvas in a Pane and overrides layoutChildren() to make the canvas dimensions match the enclosing Pane. Note that Canvas returns false from isResizable(), so ""the parent cannot resize it during layout,"" and Pane ""does not perform layout beyond resizing resizable children to their preferred sizes."" The width and height used to construct the canvas become its initial size. A similar approach is used in the Ensemble particle simulation, Fireworks.java, to scale a background image while retaining its aspect ratio."
"In this case I suggest using the debugger or at least System.out.println and print the length of the String you're trying to parse. If it shows more than the number of digits, try passing stringToParse.trim() to the parsing method. If it won't work, copy the whole string after the : and decode it using online decoder. It'll give you codes of all characters."
"In this case you must use the iterator.remove() method instead. This occurs equally if you are adding to the collection, in which case there is no general solution. However, the subtype ListIterator can be used if dealing with a list and this has an add() method."
"In this particular example, I think @Tagir is 100% correct get it into one filter and do the two checks.  I wouldn't use Optional.ofNullable the Optional stuff is really for return types not to be doing logic... but really neither here nor there."
"In this version of the code, the loop thread calls wait(), which puts the thread the sleep. It will not use any CPU cycles while sleeping. After the second thread sets the variable, it calls notifyAll() to wake up any/all threads which were waiting on that object. This is like having the pizza guy ring the doorbell, so you can sit down and rest while waiting, instead of standing awkwardly at the door."
"Invoking dispose() allows the host platform to reclaim memory consumed by the heavyweight peer, but it can't do so until after the WINDOW_CLOSING event is processed on the EventQueue. Even then, gc() is a suggestion."
it also gets along with only a single system call that hides behind files.readallbytes
"It is recommended now to use list.toArray(new Foo[0]);, not list.toArray(new Foo[list.size()]);."
"It sounds like your code works, but you are losing your image when the activity comes back. Loading your picture onPostResume() instead of onCreate() may be what you need. It feels like the activity lifecycle is the key to your problem. I have a couple of questions I will throw into comments."
"It will throw a FileNotFoundException if the file doesn't exist and cannot be created (doc), but it will create it if it can. To be sure you probably should first test that the file exists before you create the FileOutputStream (and create with createNewFile() if it doesn't):"
"It's a general rule that floating point number should never be compared like (a==b), but rather like (Math.abs(a-b) &lt; delta) where delta is a small number."
It's basically the way that generics are implemented in Java via compiler trickery. The compiled generic code actually just uses java.lang.Object wherever you talk about T (or some other type parameter) - and there's some metadata to tell the compiler that it really is a generic type.
It's in the package java.util.stream
"It's only serializable if it extends Serializable or Externalizable and all of its non-static non-transient member variables do so as well, and so on recursively until closure. In this case you clearly have one of type javafx.beans.property.SimpleIntegerProperty, which as the exception tells you isn't serializable:"
"It's preferable to use an ArrayDeque instead, which efficiently supports insertion at the front. A small wrinkle is that we can't use the three-arg form of Stream.collect(); it requires the contents of the second arg be merged into the first arg, and there's no ""add-all-at-front"" bulk operation on Deque. Instead, we use addAll() to append the contents of the first arg to the end of the second, and then we return the second. This requires using the Collector.of() factory method."
"I've found it easiest to reframe problems for this asynchronous paradigm. Instead of saying ""First get the data, then log it"", I frame the problem as ""Start to get data. When the data is loaded, log it"". This means that any code that requires the data must be inside onDataChange() method or called from inside there, like this:"
"I've only ever used Class.cast(Object) to avoid warnings in ""generics land"". I often see methods doing things like this:"
"Java 8 has Math.multiplyExact, Math.addExact etc. for ints and long. These throw an unchecked ArithmeticException on overflow."
java.langimport java.lang.*;
java.time is so much nocer to work with.
java.util.UUID.randomUUID();
"just remember that java's cipher works on byte arrays, so if you are encrypting a string, you'll need to use string.getbytes() to get a byte array."
"Just use one:&lt;action android:name=""android.net.conn.CONNECTIVITY_CHANGE"" /&gt;."
"Libraries that implement reduction based on Collector, such as Stream.collect(Collector), must adhere to the following constraints:"
"Make sure you remove any java.exe, javaw.exe and javaws.exe from your Windows\System32 folder and if you have an x64 system (Win 7 64 bits) also do the same under Windows\SysWOW64."
"Map this filter on an url-pattern for which you'd like to log responses for. Keep in mind that binary/static content like images, CSS, JS files and so on won't be logged this way. You'd like to exclude them by using a specific enough url-pattern, e.g. *.jsp or just on the servlet-name of the servlet in question. If you want to log binary/static content anyway (for which I don't see any benefit), then you need to replace the HttpServletResponse#getOutputStream() the same way as well."
"maven-compiler-plugin 3.6.0 is based on the first signature of module-info.class, which has changed a couple of times. It is not compatible with current Java 9 signature. You should use 3.6.2 when using most recent versions of JDK 9."
messages.properties
mLeft (protected variable in View class) ==&gt; getLeft() (public accessor method)
"Modify the above code so that the ""columnNames"" Vector contains another header name for the check box column and add Boolean.FALSE to each ""row"" Vector as you iterate through the ResultSet."
"multipart/form-data encoded requests are indeed not by default supported by the Servlet API prior to version 3.0. The Servlet API parses the parameters by default using application/x-www-form-urlencoded encoding. When using a different encoding, the request.getParameter() calls will all return null. When you're already on Servlet 3.0 (Glassfish 3, Tomcat 7, etc), then you can use HttpServletRequest#getParts() instead. Also see this blog for extended examples."
"No magic here. Just take your data and put it into the zip stream. In my case, I was pulling list/array data, dropping it into a CSV, then putting that CSV in to the zip (as an entry by using zos.putNextEntry(entry);). Both the CSVs and the ZIP are kept as streams so that nothing is written to the filesystem during this operation, and the final result can be just streamed out by the controller. Make sure to close out the entry each time you write one to the zip output stream (zos.closeEntry())."
"Normally, final static fields may not be modified. However System.in, System.out, and System.err are final static fields that, for legacy reasons, must be allowed to be changed by the methods System.setIn, System.setOut and System.setErr. We refer to these fields as being write-protected to distinguish them from ordinary final fields."
"Note that Glassfish versions older than 3.1.2 had a bug wherein the getParameter() still returns null. If you are targeting such a container and can't upgrade it, then you need to extract the value from getPart() with help of this utility method:"
"Note that parse() will never return null, so this cannot cause a NullPointerException. Instead, parse throws a checked ParseException if it fails."
"Note that the newInstance() call is not needed here. It's just to fix the old and buggy org.gjt.mm.mysql.Driver. Explanation here. If this line throws ClassNotFoundException, then the JAR file containing the JDBC driver class is simply not been placed in the classpath."
"Note that you can add(Integer.valueOf(0)) to any of the above types. however, you CAN'T add(new Object()) to a List&lt;Number&gt; or a List&lt;Serializable&gt;, since that violates the generic type safety rule."
"Note the importance of the explicit Locale argument. If you omit it, then it will use the default locale which is not necessarily English as used in the month name of the input string. If the locale doesn't match with the input string, then you would confusingly get a java.text.ParseException even though when the format pattern seems valid."
"Note there isn't paintComponent(). It's wrong, just use the paint() method,"
"Note: Some flavors of regex support the nesting operator R (Java doesn't, PCRE engines like PHP and Perl do), which allows you to nest arbitrary number of levels. With them, you could do: \(([^()]|(?R))*\)."
Now forget about length() consider just length and size().
Now suppose Pauli decides to sell pizzas from the back of a delivery truck. He wants a thing where he can driveTo() and cook() with.
"Now to the implied question ""how do you get the element then"": I think the best solution is to use a Map&lt;E,E&gt; instead of a Set&lt;E&gt;, to map the elements to themselves. In that way, you can efficiently retrieve an element from the ""set"", because the get() method of the Map will find the element using an efficient hash table or tree algorithm. If you wanted, you could write your own implementation of Set that offers the additional get() method, encapsulating the Map."
"Of course, if you prefer, you can inline the above into a one-liner:new BigDecimal(value).setScale(places, RoundingMode.HALF_UP).doubleValue()"
"Once you have your objects as Paths, you can draw them directly using drawPath(). You can also perform movement by transform()ing the path."
Or pass an instance of java.util.Properties to PigServer constructor.
or programmatically by SessionCookieConfig which is available by ServletContext#getSessionCookieConfig().
"Or use standard JCE to read the X.509 format key: wrap the bytes in an X509EncodedKeySpec, give it to .generatePublic() of a KeyFactory for RSA, and cast the result to RSAPublicKey. Then call .getModulus() and .getPublicExponent() to get the mathematical values and encode them in ASN.1 DER with the structure RSAPublicKey defined in PKCS#1 rfc3447 (used for PKIX/X.509 in rfc3279 2.2.1). BigInteger.toByteArray().toByteArray() values, add tag=INTEGER (0x02) and length prefixes to each one, then add a tag=SEQUENCE-composite (0x30) and length prefix to their concatenation. Then proceed to step 3."
Override getPreferredScrollableViewportSize() to customize the size of the table's enclosing JScrollPane.
"Particularly offensive to me is the fact that Stream does not implement Iterable (despite actually having method iterator) and cannot be used in a for-each, only with a forEach(). I recommend casting Streams into Iterables with (Iterable&lt;T&gt;)stream::iterator. A better alternative is to use StreamEx which fixes a number of Stream API problems, including implementing Iterable."
Pattern.UNICODE_CHARACTER_CLASS
"Pay close attention to the details. You probably are using an interface when you are only providing the implementation, or try to use a parent class when Dagger only knows about the subclass.@Qualifier or used @Named(""typeA"") with it. To Dagger this is a completely different object! Double check that you actually provide and request the same dependency."
"Per Byron's answer, you can't set networkaddress.cache.ttl or networkaddress.cache.negative.ttl as System Properties by using the -D flag or calling System.setProperty because these are not System properties - they are Security properties."
"Please be aware: It is required to use getEnclosingConstructor() for constructors. During blocks outside of (named) methods, getEnclosingMethod() returns null."
"Please get rid of those scriptlets in your JSP. The  request.setCharacterEncoding(""UTF-8""); is called at the wrong moment. It would be too late whenever you've properly used a Servlet to process the request. You'd rather like to use a filter for this. The  response.setCharacterEncoding(""UTF-8""); part is already implicitly done by pageEncoding=""UTF-8"" in top of JSP."
"Practically speaking, it is unusual for a lambda expression to need to talk about itself (either to call itself recursively or to invoke its other methods), while it is more common to want to use names to refer to things in the enclosing class that would otherwise be shadowed (this, toString()). If it is necessary for a lambda expression to refer to itself (as if via this), a method reference or an anonymous inner class should be used instead."
"Prior to Java 8, you produce a concurrent hash set backed by a concurrent hash map, by using Collections.newSetFromMap(map)"
r1 and r2 are just two different objects of classes that implement the Runnable interface and thus implement the run() method.  When you call r1.run() you are executing it in the current thread.
refresh() cannot be called on a detached entity.
Regarding compiler warnings: I suspect that Class.cast(Object) isn't special to the compiler. It could be optimized when used statically (i.e. Foo.class.cast(o) rather than cls.cast(o)) but I've never seen anybody using it - which makes the effort of building this optimization into the compiler somewhat worthless.
"resource.getFile() expects the resource itself to be available on the file system, i.e. it can't be nested inside a jar file. This is why it works when you run your application in STS (Spring Tool Suite) but doesn't work once you've built your application and run it from the executable jar. Rather than using getFile() to access the resource's contents, I'd recommend using getInputStream() instead. That'll allow you to read the resource's content regardless of where it's located."
"resource.getSubResourceMethods() == getChildResources(), which actually just returns a List&lt;Resource&gt;"
"Run java with the option -Djava.net.preferIPv4Stack=true to force java to use IPv4 instead of IPv6. On Linux, this could also be achieved by running (or placing it inside /etc/profile:"
Safe with leading zeros (unlike BigInteger) and with negative byte values (unlike Byte.parseByte)
See also: How are SSL certificate server names resolved/Can I add alternative names using keytool? If you run into java.security.cert.CertificateException: No name matching localhost found exception.
See javax.imageio package for more info.  That's using the AWT image.  Otherwise you could do:
"See the relevant JavaDoc.  This approach has the advantage of not needing to explicitly initialize a java.util.Random instance, which can be a source of confusion and error if used inappropriately."
See: JavaSE 6 java.lang.StringBuffer capacity()
"Sending messages directly to the HWND of controls via PostMessage() and SendMessage(), for example to the MalwareBytes Button class, will trigger a button press in the program itself, very similarl to how SetForegroundWindow() should bring an edit-box style control to the front giving you the ability to type. Fun stuff to play with :)"
"Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object. The driver uses the Calendar object to construct an SQL TIMESTAMP value, which the driver then sends to the database. With a Calendar object, the driver can calculate the timestamp taking into account a custom time zone. If no Calendar object is specified, the driver uses the default time zone, which is that of the virtual machine running the application."
Sets the thread.isinterrupted() to true:
"Since JDK 1.5 Java has had extremely well implemented and robust concurrency tools beyond just locks, they live in java.util.concurrent and a specifically interesting example is the java.util.concurrent.atomic subpackage that contains thread-safe primitives that implement the compare-and-swap operation and can map to actual native hardware-supported versions of these operations."
"Since, the underlying failure cannot be pinpointed, it is better to switch on the  -Djavax.net.debug=all flag to enable debugging of the SSL connection established. With the debug switched on, you can pinpoint what activity in the handshake has failed."
"Singletons are a nightmare for testing and, if lazily initialized, will introduce ""state indeterminism"" with subtle side effects (which may suddenly surface when moving calls to getInstance() from one scope to another). Visibility has been mentioned as another problem, and since singletons imply ""global"" (= random) access to shared state, subtle bugs may arise when not properly synchronized in concurrent applications."
"size() --  Collection Object (ArrayList, Set, etc) -- to know the size of the Collection "
"So basically, this is a function that gets a LoopPipe.LoopBundle as an object which contains metadata about the loop and expects that you return a boolean value.  If you understand that concept, then all of Gremlin Java opens up for you, because everywhere that you see a groovy closure, you know that underneath it is just some form of PipeFunction in java and given that you can now read the expectations of a PipeFunction from the javadocs, it should be straightforward to do these language translations.  "
So you basically already have it as throwable variable and you don't need to call getCause() on it.
"So, since rawAlpha is a raw type, the type of rawAlpha.intList is the erasure of List&lt;Integer&gt; intList(). That erasure is List intList()."
"Some servlet containers have request header logging; e.g. with Tomcat there's a beast called the RequestDumperValve that you can configure in your ""server.xml"" file."
Sometimes there will be situations where you don't want to force every method to declare your exception implementation in its throws clause.  In this case you can create an unchecked exception.  An unchecked exception is any exception that extends java.lang.RuntimeException (which itself is a subclass of java.lang.Exception):
Stream.of(T...).filter(Objects::nonNull).findFirst().orElse(null)
"Streams.asString takes a second parameter which is the charset encoding to use, you might need to specify one that is suitable for your site."
"String serverHomeDir = System.getProperty(""server.home.dir"");"
"String.contentEquals() compares the content of the String with the content of any CharSequence (available since Java 1.5). Saves you from having to turn your StringBuffer, etc into a String before doing the equality comparison, but leaves the null checking to you."
String.split(String regex): Splits this string around matches of the given regular expression.
"StringUtils.join(java.lang.Iterable,char)"
supplying the second parameter as true tells the filewriter that you want to append to the end of it.
synchronized(X.class) is used to make sure that there is exactly one Thread in the block. synchronized(this) ensures that there is exactly one thread per instance. If this makes the actual code in the block thread-safe depends on the implementation. If mutate only state of the instance synchronized(this) is enough.
"System properties are set on the Java command line using the -Dpropertyname=valueSystem.setProperty(String key, String value)System.getProperties().load() methods.system property you can use System.getProperty(String key) or System.getProperty(String key, String def)."
"System.getProperty(""java.version"") returns what you need. "
System.setOut(PrintStream ps)
textlogger.TextLoggingSample.java
"That being said, it doesn't seem like it would be too difficult to achieve something similar to what you are describing. For instance, you might consider implementing your searchable-Activity so that it will accept the android.intent.action.SEARCH intent and (instead of immediately displaying the results in a ListView, for example) will pass the search query to your Fragments. For instance, consider the following searchable Activity:"
"That is, a shutdown hook keeps the JVM running until the hook has terminated (returned from the run()-method."
"The assignment operator in Java evaluates to the assigned value (like it does in, e.g., c). So here, readLine() will be executed, and its return value stored in line. That stored value is then checked against null, and if it's null then the loop will terminate."
The AtomicInteger class uses CAS (compare-and-swap) low-level CPU operations (no synchronization needed!) They allow you to modify a particular variable only if the present value is equal to something else (and is returned successfully). So when you execute getAndIncrement() it actually runs in a loop (simplified real implementation):
"The binder specifying dependency injection is registered in the constructor of the class, and we also tell the application where to find the REST resources (in your case, MyResource) using the packages() method call."
"The button's action, which is invoked whenever the button is fired. This may be due to the user clicking on the button with the mouse, or by a touch event, or by a key press, or if the developer programmatically invokes the fire() method."
the class ChannelN.java calls:
"The constructors of Pageable are deprecated, use of() instead:"
"The DriverManager methods getConnection and getDrivers have been enhanced to support the Java Standard Edition Service Provider mechanism. JDBC 4.0 Drivers must include the file META-INF/services/java.sql.Driver. This file contains the name of the JDBC drivers implementation of java.sql.Driver. For example, to load the my.sql.Driver class, the META-INF/services/java.sql.Driver file would contain the entry:"
"The exact behavior of System.identityHashCode(Object) depends on the JVM implementation.  (The actual implementation on recent Hotspot JVMs is rather clever, but I digress.)"
"The example below allows one to update a subplot or change a series' visibility independently. Break on configure() to see the effect. Your suggestion to toggle setAutoRange () can be replaced with a single call to configure(); but the effect should be nil, as the data and its combined maximal Range are unchanged."
"The first is equivalent to hibernate.show_sql=true legacy property, the second prints the bound parameters among other things."
The first solution (with the MockitoAnnotations.initMocks) could be used when you have already configured a specific runner (SpringJUnit4ClassRunner for example) on your test case.
"The first thing you have to do is to identify the conditions that you want the methods to wait for. In this case, you will want the put() method to block until there is free space in the store, and you will want the take() method to block until there is some element to return."
"The get() operation returns a Task&lt;&gt; which means it is an asynchronous operation.  Calling getListItems() only starts the operation, it does not wait for it to complete, that's why you have to add success and failure listeners."
"The good way to do it is to have the run() of the Thread guarded by a boolean variable and set it to true from the outside when you want to stop it, something like:"
"the idea is that if you call iterable.iterator() twice you'll get independent iterators - for most iterables, anyway"
"The Java programming language is based on the Unicode character set, and several libraries implement the Unicode standard. The primitive data type char in the Java programming language is an unsigned 16-bit integer that can represent a Unicode code point in the range U+0000 to U+FFFF, or the code units of UTF-16. The various types and classes in the Java platform that represent character sequences - char[], implementations of java.lang.CharSequence (such as the String class), and implementations of java.text.CharacterIterator - are UTF-16 sequences."
"The Java String class provides the .compareTo () method in order to lexicographically compare Strings. It is used like this ""apple"".compareTo (""banana"")."
"The java.time framework is built into Java 8 and later. These classes supplant the troublesome old legacy date-time classes such as java.util.Date, Calendar, &amp; SimpleDateFormat."
"The javaws command launches Java Web Start, which is the reference implementation of the Java Network Launching Protocol (JNLP). Java Web Start launches Java applications/applets hosted on a network.  javaws will launch the Java application/applet specified in the JNLP file.javaws launcher has a set of options that are supported in the current release. However, the options may be removed in a future release."
"The JceSecurity.isRestricted = false part is all that is needed to use 256-bit ciphers directly; however, without the two other operations, Cipher.getMaxAllowedKeyLength() will still keep reporting 128, and 256-bit TLS cipher suites won't work."
The method java.sql.Date.valueOf(java.lang.String) received a string representing a date in the format yyyy-[m]m-[d]d. e.g.:
"The normal practice to store a timestamp in the DB (thus, java.util.Date in Java side and java.sql.Timestamp in JDBC side) is to use PreparedStatement#setTimestamp()."
The org.apache.commons.lang.StringEscapeUtils.unescapeJava() given here as another answer is really very little help at all.
the pattern.quote(from) is necessary to escape any special chars in the from variable
"The performance benefits are of this are huge and only grow as you add more objects to your collection. This is because for an eagerly loaded collection, Hibernate does a ton of behind the scenes checking to ensure that none of your data is out of date. While I do advocate using Hibernate for collections, be aware that there is a performance penalty** for using fetchType.EAGER. However, take our Person object example. Its fairly likely that when we load a Person we will want to know what Roles they perform. I will usually mark this collection as fetchType.EAGER. DON'T REFLEXIVELY MARK YOUR COLLECTION AS fetchType.EAGER SIMPLY TO GET AROUND A LazyInitializationException. Not only is it bad for performance reasons, it generally indicates that you have a design issue. Ask yourself, should this collection actually be an eagerly loaded collection, or am I doing this just to access the collection in this one method. Hibernate has ways around this, that doesn't impact the performance of your operations quite as much. You can use the following code in your Service layer if you want to initialize a lazily loaded collection just for this one call."
"The preferred solution is to move the code to the fragment onCreateView(), calling findViewById() on the inflated fragment layout rootView:"
"The problem is related (I believe) on how the localhost name resolution works and how the java.net.InetAddr class is retrieving the addresses. I verified with few colleagues and apparently it doesn't happen to everyone who upgraded to Sierra, but I'm still investigating the roots of this change."
"The problem was resolved (with some open suspicions about the suitability of nanoTime() on multi-core systems!) by adding /usepmtimer to the end of my C:\boot.ini string; forcing Windows to use the Power Management timer rather than the TSC. It's an open question as to why I needed to do this given I'm on XP SP3, as I understood that this was the default, however perhaps it was due to the manner in which my machine was patched to SP3."
"The problem with Linked Resources is they are local to the workspace, in the preferences.export the preferences in a [myPrefs.epf] file, and then trim the exported file in order to leave only the lines containing pathvariable:"
"The quickest way to get the ""first"" entry is still entrySet().iterator().next(). Getting the ""last"" entry is possible, but will entail iterating over the whole entry set by calling .next() until you reach the last.  while (iterator.hasNext()) { lastElement = iterator.next() }"
"The second is the implementation of equals for the constraint violation (javax.validation.Validator.validate() returns a set!). When you are always putting in the same message (should be one of [a, b]), the set will still contain only 1 element. As a solution you could prepend the current value to the message (class CoBoundedStringConstraints):"
"The split("";"", 2)[0] is there to get rid of cookie attributes which are irrelevant for the server side like expires, path, etc. Alternatively, you could also use cookie.substring(0, cookie.indexOf(';')) instead of split()."
"The time zone part is important: java.util.Date is always based on UTC. In most cases where I've been interested in a date, that's been a date in a specific time zone. That on its own will force you to use Calendar or Joda Time (unless you want to account for the time zone yourself, which I don't recommend.)"
Then immediately convert to a LocalDate. You should handle the java.sql objects as briefly as possible. Do all your business logic and other work using only the java.time types.
then you can use the getsource() method to tell which combobox the event came from
"then you create new ArrayList, which is a full, independent copy of the original one. Although here you create the wrapper using Arrays.asList as well, it is used only during the construction of the new ArrayList and is garbage-collected afterwards. The structure of this new ArrayList is completely independent of the original array. It contains the same elements (both the original array and this new ArrayList reference the same integers in memory), but it creates a new, internal array, that holds the references. So when you shuffle it, add, remove elements etc., the original array is unchanged."
"There are a few different things you can do, depending upon how much control you want over the exact color. The easiest way is to change some of the properties in the UIManager to change the colors that Nimbus derives its other colors from. I played around a little with your code, and found that if I put the following code after the call to UIManager.setLookAndFeel(), it would approximate the red-on-black look you attempted in your example:"
"There are also Arrays.equals and Arrays.deepEquals that perform array equality comparison by their elements, among many other array-related utility methods."
"There are many, many other reasons to use Joda Time or java.time instead of the built-in java.util types - they're generally far better APIs. You can always convert to/from a java.util.Date at the boundaries of your own code if you need to, e.g. for database interaction."
"There are subtle differences as to how the fileName you are passing is interpreted. Basically, you have 2 different methods: ClassLoader.getResourceAsStream() and Class.getResourceAsStream(). These two methods will locate the resource differently."
"There are three libraries mentioned on the Arbitrary Precision Arithmetic page: java.math (containing the mentioned BigDecimal), Apfloat and JScience. I run a little speed check on them which just uses addition and multiplication. "
There are two good ways to copy array is to use clone and System.arraycopy().
"There is a little bit of confusion in your code, maybe because some method you called are missing, or maybe because you are using your keys to encrypt...your keys(!!!)"
"There is no need for LinkedList.Entry to be  top-level class as it is only used by LinkedList (there are some other interfaces that also have static nested classes named Entry, such as Map.Entry - same concept). And since it does not need access to LinkedList's members, it makes sense for it to be static - it's a much cleaner approach."
there is nothing magical about the string.indexof code
"There's a much better answer than using spliteratorUnknownSize directly, which is both easier and gets a better result.  Iterable has a spliterator() method, so you should just use that to get your spliterator.  In the worst case, it's the same code (the default implementation uses spliteratorUnknownSize), but in the more common case, where your Iterable is already a collection, you'll get a better spliterator, and therefore better stream performance (maybe even good parallelism).  It's also less code:"
"These constructors are overloaded to call another constructor using this(...). The first no-arg constructor calls the second with null arguments. The second calls a third constructor (not shown), which must take a Stock, String, and long. This pattern, called constructor chaining, is often used to provide multiple ways of instantiating an object without duplicate code. The constructor with fewer arguments fills in the missing arguments with default values, such as with new Date().getTime(), or else just passes nulls."
They can be defined using the @javax.faces.bean.ManagedBean annotation which takes an optional name parameter. This name can be used to reference the bean from JSF pages.
This command will generate a HelloWorld.class
"This does not answer the original question, but as the question is highly ranked and linked for any ContextClassLoader query, I think it is important to answer the related question of when the context class loader should be used. Short answer: never use the context class loader! But set it to getClass().getClassLoader() when you have to call a method that is missing a ClassLoader parameter."
"This explains why your project runs in the first case, when you don't have a control added to the scene, just the StackPane, that belongs to the javafx.graphics module, but fails with the posted exception when you add the Label, that belongs to the javafx.controls module."
This handles Parent#constructor() executed with super() so next you will see code from Son constructor after super() which will generate
"This is exactly the same as our other example, except that because we're allowed to implement methods in abstract classes, we did, and because we don't have to implement already-implemented methods in an inheriting class, we didn't.  But you may have noticed, there's a problem.  What happens when we call new InheritsFromTwoAbstractClasses().method()?  Does it print ""Hello"" or ""Goodbye""?  You probably don't know, and neither does the Java compiler.  Another language, C++ allowed this kind of inheritance and they resolved these issues in ways that were often very complicated.  To avoid this kind of trouble, Java decided to make this ""multiple inheritance"" illegal."
"This is important because, for example, if you called Security.setProperty in a .war file and deployed that .war to Tomcat, this wouldn't work: Tomcat uses the Java networking stack to initialize itself much earlier than your .war's code is executed.  Because of this 'race condition', it is usually more convenient to use the -D flag when starting the JVM process. "
"This is PKCS#1 format of a private key. Try this code. It doesn't use Bouncy Castle or other third-party crypto providers. Just java.security and sun.security for DER sequece parsing. Also it supports parsing of a private key in PKCS#8 format (PEM file that has a header ""-----BEGIN PRIVATE KEY-----"")."
"This is the main reason why Swing's JPasswordField's getText() method is deprecated, and why getPassword() uses character arrays."
"This means the constructor does not have access to @FXML fields referring to components defined in the .fxml file, while initialize() does have access to them."
This method does not invoke the layout()
"This problem happens because Android Platform (android.jar) already contains JUnit classes. IDEA test runner loads these classes and sees that they are from the old JUnit, while you are trying to use annotated tests which is a feature of the new JUnit, therefore you get the error from the test runner."
"This returns the length of the file in bytes or 0 if the file does not exist. There is no built-in way to get the size of a folder, you are going to have to walk the directory tree recursively (using the listFiles() method of a file object that represents a directory) and accumulate the directory size for yourself:"
"This uses a java.util.Scanner, telling it to delimit the input with \Z, which is the end of the string anchor. This ultimately makes the input have one actual token, which is the entire file, so it can be read with one call to next()."
"This will treat the pattern1 and pattern2 as literal text, and the text in between the patterns is captured in the first capturing group. You can remove Pattern.quote() if you want to use regex, but I don't guarantee anything if you do that."
"This works because BigDecimal maintains a ""precision,"" and the BigDecimal(String) constructor sets that from the number of digits to the right of the ., and uses it in toString. So if you just dump it out with System.out.println(decimal);, it prints out 12.00."
Those are not regular files nor directories nor symlinks so both File.isFile() and File.isDirectory() will return false while File.exists() will return true. For example /dev/null (on Unix compatible OSes) is a device file.
"Though strict == comparison of floating point numbers has very little practical sense, the strict &lt; and &gt; comparison, on the contrary, is a valid use case (example - logic triggering when certain value exceeds threshold: (val &gt; threshold) &amp;&amp; panic();)"
"Throwable.printStackTrace() writes the stack trace to System.err PrintStream. The System.err stream and the underlying standard ""error"" output stream of the JVM process can be redirected by"
"tl;dr - A simple port forward from the container to the host will not work, and no hosts files should be modified. What exact IP/hostname + port do you want to connect to? Make sure that value is set as advertised.listeners on the broker. Make sure that address and the servers listed  as part of bootstrap.servers are actually resolvable (ping an IP/hostname, use netcat to check ports...)"
"To print something different when you call System.out.println(myObject), you must override the toString() method in your own class. Here's a simple example:"
"To start off, write an abstract TypeAdapterFactory that gives you hooks to modify the outgoing data. This example uses a new API in Gson 2.2 called getDelegateAdapter() that allows you to look up the adapter that Gson would use by default. The delegate adapters are extremely handy if you just want to tweak the standard behavior. And unlike full custom type adapters, they'll stay up-to-date automatically as you add and remove fields."
To wrap a class you have to inject a play.data.FormFactory into your Controller which then allows you to create the form:
"Try using Session.getInstance() instead of getDefaultInstance(), which creates a new Session each time, using the supplied properties."
"UCanAccess (ucanaccess-x.x.x.jar)HSQLDB (hsqldb.jar, version 2.2.5 or newer)Jackcess (jackcess-2.x.x.jar)commons-lang (commons-lang-2.6.jar, or newer 2.x version)commons-logging (commons-logging-1.1.1.jar, or newer 1.x version)"
"Updated: As mentioned by Stuart MarksArrays.stream is preferable to using Stream.of(array).skip(n).limit(m) because the former results in a SIZED stream whereas the latter does not. The reason is that limit(m) doesn't know whether the size is m or less than m, whereas Arrays.streamArrays.stream(array,start,end) here, whereas for stream implementation returned by Stream.of(array).skip().limit() is within this method."
"Use ServletContext#getRealPath() to translate a relative web path to an absolute disk file system path. The ServletContext is available in the servlet by the inherited getServletContext() method. Thus, following should point out the right file:"
"Use the Socket() constructor, and connect(SocketAddress endpoint, int timeout) method instead."
"Using it is straightforward: just provide extra parameter to Instant.now(), or call Clock.instant() directly:"
using math.round() will round the float to the nearest integer.
"Usually, one would call the reduce method using Math.max(int, int) as follows:"
via system.gc() can reduce the used memory of the java process (in java known as totalmemory)
"Was puzzled that that header didn't show up on the image at all: it wasn't clipped or something, it wasn't painted at all. The reason for that is .. that at the time of painting the panel to the image, the header is no longer part of the hierarchy. When closing the optionPane, table.removeNotify removes the header. For adding it again, call addNotify, as in this snippet:"
"We could overload the toString() method of a MyComplexNumber class to have it return the stringified hour of the day. Should the toString() overloading be banned, too? We could sabotage MyComplexNumber.equals to have it return a random value, modify the operands... etc. etc. etc.."
"When a client visits the webapp for the first time and/or the HttpSession is obtained for the first time via request.getSession(), the servlet container creates a new HttpSession object, generates a long and unique ID (which you can get by session.getId()), and stores it in the server's memory. The servlet container also sets a Cookie in the Set-Cookie header of the HTTP response with JSESSIONID as its name and the unique session ID as its value."
"When we use maven-assembly-plugin, it merges all our JARs into one, and all META-INFO/services/org.apache.hadoop.fs.FileSystem overwrite each-other. Only one of these files remains (the last one that was added). In this case, the FileSystem list from hadoop-commons overwrites the list from hadoop-hdfs, so DistributedFileSystem was no longer declared."
"When you are done with using your Connection, you need to explicitly close it by calling its close() method in order to release any other database resources (cursors, handles, etc.) the connection may be holding on to."
"When you compile some code against a generic type or method, the compiler works out what you really mean (i.e. what the type argument for T is) and verifies at compile time that you're doing the right thing, but the emitted code again just talks in terms of java.lang.Object - the compiler generates extra casts where necessary. At execution time, a List&lt;String&gt;  and a List&lt;Date&gt; are exactly the same; the extra type information has been erased by the compiler."
Where did you get this extremely odd approach using getRuntime().exec()? Here's an easy working code sample for you using SharedPreferences. Replace your whole switch-statement with this one:
where in this case the append method takes the null and then delegates it to String.valueOf().
"will give you a logger for the category ""com.fizz"".fizz will be handled by alle the appenders from the root logger and the newAppender."
Would you even want to override [Activity|ViewGroup|View].dispatchTouchEvent? Unless you are doing some custom routing you probably should not.
"Yes, you should iterate over 2D boolean array in order to deep copy it. Also look at java.util.Arrays#copyOf methods if you are on Java 6."
"You are assuming that write() succeeded completely, and you're ignoring the count it returns."
you can call println() on any printstream
You can call Thread.getState() on and check if the state is TIMED_WAITING.
You can create Comparators to sort any arbitrary way for any class.String class defines the CASE_INSENSITIVE_ORDER comparator.
"You can now simply do Instant.parse(""2015-04-28T14:23:38.521Z"") and get the correct thing now, especially since you should be using Instant instead of the broken java.util.Date with the most recent versions of Java. "
You can replace System.in with you own stream by calling System.setIn(InputStream in)
You can use Class#getDeclaredFields() to get all declared fields of the class. You can use Field#get() to get the value.
You can use Files#readAllLines() to get all lines of a text file into a List&lt;String&gt;.
You can use Thread.currentThread().getStackTrace().
"You can, however, have a List&lt;Integer&gt; using the Integer class that wraps the int primitive. Convert your array to a List with the Arrays.asList utility method."
You could also try using Class.forName(String) to force the JVM to load the class and invoke its static blocks.
You could do this in ServletContextListener#contextInitialized() or HttpServlet#init().
"You could probably use Joda-Time as well, but I don't know why you should bother with that (Update 2022; maybe because the entire javax.xml.bind section is missing from Android's javax.xml package)."
you could use properties files which are manipulated with the java.util.properties class
"You do composition by having an instance of another class C as a field of your class, instead of extending C. A good example where composition would've been a lot better than inheritance is java.util.Stack, which currently extends java.util.Vector. This is now considered a blunder. A stack ""is-NOT-a"" vector; you should not be allowed to insert and remove elements arbitrarily. It should've been composition instead."
you get that exception because get() returns a type object
"You haven't provided Spring Boot with enough information to auto-configure a DataSource. To do so, you'll need to add some properties to application.properties with the spring.datasource prefix. Take a look at DataSourceProperties to see all of the properties that you can set. "
You may also want to add the ACCESS_COARSE_LOCATION permission for when GPS isn't available and select your location provider with the getBestProvider() method.
"You must override hashCode() in every class that overrides equals(). Failure to do so will result in a violation of the general contract for Object.hashCode(), which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable."
"You need to make the same change to use &lt; newGuess.length() when printing out the content too - otherwise for an array of length 4 (which has valid indexes 0, 1, 2, 3) you'll try to use newGuess[4]. The vast majority of for loops I write use &lt; in the condition, rather than &lt;=."
You need to override the method paintComponent(Graphics g) of JPanel and use drawImage() on the Graphics object g as in this example.
You need to use IPackageStatsObserver.aidl and have to invoke getPackageSizeInfo method by reflection.
"You should also note that you might be better off using the click() method of the WebElement interface, but disabling native events before instantiating your driver. This would accomplish the same goal (with the same potential limitations), but not force you to write and maintain your own JavaScript."
You will better understand if you try to compare the length : jTextPane1.getText().length() and jTextPane1().getDocument().getLength().
You will need to have ValueActivity implement Parcelable interface and you will need to implement writeToParcel() the CREATOR and a suitable constructor that takes a Parcel as argument. See the documentation of Parcelable interface.
"you'll need to override hashcode(), too"
"Your code wouldn't compile if the required classes weren't present (unless classes are loaded with reflection), so usually this exception means that your classpath doesn't include the required classes. Remember that the classloader (specifically java.net.URLClassLoader) will look for classes in package a.b.c in folder a/b/c/ in each entry in your classpath. NoClassDefFoundError can also indicate that you're missing a transitive dependency of a .jar file that you've compiled against and you're trying to use."
"Your first matcher anyRequest() is always applied, because the order of matchers is important, see HttpSecurity#authorizeRequests:"
Your thread is finishing immediately because it does not have a run() method defined so it is started and finishes.  Really it is a race condition and the thread that is started could finish before the main thread gets to the wait() method call.  You can see this if you put a short sleep (maybe 10ms) after the start() is called.  Then you can see that you program will sit in wait() forever.
yourelement.sendKeys(Keys.RETURN) or .sendKeys(Keys.ENTER) : which is an equivalent of focusing that element and hitting RETURN/ENTER on that element
