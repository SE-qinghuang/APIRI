user,assistant
"Natural language text: for collections as return types always return an empty collection instead of a null, unless you need a third state of ""not present"". Kotlin has helper functions such as emptyList() or emptySet() to create these empty values.
API Non-FQNs: emptyList(); emptySet()",API FQNs: kotlin.collections.emptyList(); kotlin.collections.emptySet()
"Natural language text: when using methods which return a nullable value for which you have a default or alternative, use the Elvis operator to provide a default value. In the case of a Map use the getOrElse() which allows a default value to be generated instead of Map method get() which returns a nullable value. Same for getOrPut()
API Non-FQNs: getOrElse(); get(); getOrPut()",API FQNs: kotlin.collections.Map.getOrElse(); kotlin.collections.Map.get(); kotlin.collections.Map.getOrPut()
"Natural language text: See, we don't have any return type anymore. In the end just simply call readData() function in your onCreate function and pass an instance of the MyCallback interface as an argument like this:
API Non-FQNs: readData(); onCreate; MyCallback",API FQNs: None. They don't have FQN.
"Natural language text: Edit: I understand why this happens that wasn't my point. My point is that it at least needs to give a warning or call the notifyDataSetChanged() function. Because apparently I am calling the submitList(...) function for a reason. I am pretty sure people are trying to figure out what went wrong for hours until they figure out the submitList() ignores silently the call.
API Non-FQNs: notifyDataSetChanged(); submitList()",API FQNs: None.